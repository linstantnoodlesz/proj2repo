All questions are optional, though try to answer at least 4. The main goal of this file is to get you thinking critically about your own work, but we will also use these self reflections at the end of the semester when we do our internal review of the course.

ArrayDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: Making the code more modular; my solution had plenty of cases where I repeated certain lines, like calculating
idices, but putting repetitions into private methods would make the code better to understand.

Q: What's something you felt proud of in your code, if anything?

A: Most of the pride comes from the fact that it works at all, but mostly that I was able to use the concepts
learned in class about data structures and Java coding to be able to make a relatively short array deque solution.

Q: What's something that was particularly inelegant in your code, if anything?

A: All the index calculations, especially when resizing

Q: What do you wish you would have known before writing ArrayDeque, if anything?

A: Knowing how to efficiently write modular code.

Q: If you wrote ArrayDeque again, what would you do differently, if anything?

A: I would make it more modular and understandable.

-----

LinkedListDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: Instead of using "sentinel.next.next.prev" for example, the staff solution that put "sentinel.next.next"
into a variable, then reassigning its prev would be better.

Q: What's something you felt proud of in your code, if anything?

A: I really like the simplicity of implementning the linked list array deque, and its use of a
private node class and sentinel.

Q: What's something that was particularly inelegant in your code, if anything?

A: The lack of variables in the remove methods, "sentinel.next.next.prev".

Q: What do you wish you would have known before writing LinkedListDeque, if anything?

A: I think I knew what I had to know.

Q: If you wrote LinkedListDeque again, what would you do differently, if anything?

A: Putting some long expressions into variables in the remove method.

-----

Meta:

Q: This is the first time we've tried something like this. Did you like this design review process? Anything we should do differently next time?

A: 